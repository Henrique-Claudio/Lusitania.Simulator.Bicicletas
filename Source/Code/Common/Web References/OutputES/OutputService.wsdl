<?xml version="1.0" encoding="utf-8"?>
<wsdl:definitions xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:apachesoap="http://xml.apache.org/xml-soap" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:intf="http://adobe.com/idp/services" xmlns:impl="http://adobe.com/idp/services" targetNamespace="http://adobe.com/idp/services" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <wsdl:types>
    <xsd:schema xmlns="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="http://adobe.com/idp/services">
      <xsd:import namespace="http://xml.apache.org/xml-soap" />
      <xsd:element name="generateOutput">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" maxOccurs="1" name="outputOptionsSpec" type="impl:OutputOptionsSpec" />
            <xsd:element minOccurs="0" maxOccurs="1" name="renderOptionsSpec" type="impl:RenderOptionsSpec" />
            <xsd:element minOccurs="0" maxOccurs="1" name="inDataDoc" type="impl:BLOB" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:complexType name="MyArrayOf_xsd_anyType">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="xsd:anyType" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="OutputOptionsSpec">
        <xsd:sequence>
          <xsd:element name="PCLFormat" type="xsd:boolean" />
          <xsd:element name="ZPLFormat" type="xsd:boolean" />
          <xsd:element name="batch" type="xsd:boolean" />
          <xsd:element name="charset" nillable="true" type="xsd:string" />
          <xsd:element name="contentRoot" nillable="true" type="xsd:string" />
          <xsd:element name="copies" type="xsd:int" />
          <xsd:element name="dataFile" nillable="true" type="xsd:string" />
          <xsd:element name="emailBody" nillable="true" type="xsd:string" />
          <xsd:element name="emailRecipients" nillable="true" type="xsd:string" />
          <xsd:element name="emailServer" nillable="true" type="xsd:string" />
          <xsd:element name="emailSubject" nillable="true" type="xsd:string" />
          <xsd:element name="fileUri" nillable="true" type="xsd:string" />
          <xsd:element name="form" nillable="true" type="xsd:string" />
          <xsd:element name="locale" nillable="true" type="xsd:string" />
          <xsd:element name="lookAhead" type="xsd:int" />
          <xsd:element name="lpdURI" nillable="true" type="xsd:string" />
          <xsd:element name="metaDataSpecFile" nillable="true" type="xsd:string" />
          <xsd:element name="multipleOutput" type="xsd:boolean" />
          <xsd:element name="optionString" nillable="true" type="xsd:string" />
          <xsd:element name="options" nillable="true" type="xsd:string" />
          <xsd:element name="outputBin" nillable="true" type="xsd:string" />
          <xsd:element name="outputJog" nillable="true" type="xsd:string" />
          <xsd:element name="outputStream" nillable="true" type="xsd:string" />
          <xsd:element name="pageOffsetX" nillable="true" type="xsd:string" />
          <xsd:element name="pageOffsetY" nillable="true" type="xsd:string" />
          <xsd:element name="pagination" nillable="true" type="xsd:string" />
          <xsd:element name="postScriptFormat" type="xsd:boolean" />
          <xsd:element name="printFormat" nillable="true" type="xsd:string" />
          <xsd:element name="printUri" nillable="true" type="xsd:string" />
          <xsd:element name="printerQueueName" nillable="true" type="xsd:string" />
          <xsd:element name="recordIdField" nillable="true" type="xsd:string" />
          <xsd:element name="recordLevel" type="xsd:int" />
          <xsd:element name="recordLevelMetaData" type="xsd:boolean" />
          <xsd:element name="recordName" nillable="true" type="xsd:string" />
          <xsd:element name="requestor" nillable="true" type="xsd:string" />
          <xsd:element name="rules" nillable="true" type="impl:MyArrayOf_xsd_anyType" />
          <xsd:element name="serverPrintSpec" nillable="true" type="xsd:string" />
          <xsd:element name="singleOutput" type="xsd:boolean" />
          <xsd:element name="staple" nillable="true" type="xsd:string" />
          <xsd:element name="waitForResponse" type="xsd:boolean" />
          <xsd:element name="xci" nillable="true" type="xsd:string" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="PDFAConformance">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="A" />
          <xsd:enumeration value="B" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="PDFARevisionNumber">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="Revision_1" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="RenderOptionsSpec">
        <xsd:sequence>
          <xsd:element name="PDFAAmendment" nillable="true" type="xsd:string" />
          <xsd:element name="PDFAConformance" nillable="true" type="impl:PDFAConformance" />
          <xsd:element name="PDFARevisionNumber" nillable="true" type="impl:PDFARevisionNumber" />
          <xsd:element name="cacheEnabled" nillable="true" type="xsd:boolean" />
          <xsd:element name="debugEnabled" type="xsd:boolean" />
          <xsd:element name="linearizedPDF" type="xsd:boolean" />
          <xsd:element name="options" nillable="true" type="xsd:string" />
          <xsd:element name="pdfVersion" nillable="true" type="xsd:string" />
          <xsd:element name="renderAtClient" nillable="true" type="xsd:string" />
          <xsd:element name="taggedPDF" type="xsd:boolean" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="BLOB">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="1" name="contentType" type="xsd:string" />
          <xsd:element minOccurs="0" maxOccurs="1" name="binaryData" type="xsd:base64Binary" />
          <xsd:element minOccurs="0" maxOccurs="1" name="attachmentID" type="xsd:string" />
          <xsd:element minOccurs="0" maxOccurs="1" name="remoteURL" type="xsd:string" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="generateOutputResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="outResultDoc" type="impl:BLOB" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="generatePDFOutput">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="transformationFormat" type="impl:TransformationFormat" />
            <xsd:element name="form" type="xsd:string" />
            <xsd:element name="contentRoot" type="xsd:string" />
            <xsd:element minOccurs="0" maxOccurs="1" name="pdfOutputOptionsSpec" type="impl:PDFOutputOptionsSpec" />
            <xsd:element minOccurs="0" maxOccurs="1" name="renderOptionsSpec" type="impl:RenderOptionsSpec" />
            <xsd:element minOccurs="0" maxOccurs="1" name="inDataDoc" type="impl:BLOB" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:simpleType name="TransformationFormat">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="PDF" />
          <xsd:enumeration value="PDFA" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="PDFOutputOptionsSpec">
        <xsd:sequence>
          <xsd:element name="XCIURI" nillable="true" type="xsd:string" />
          <xsd:element name="charset" nillable="true" type="xsd:string" />
          <xsd:element name="fileURI" nillable="true" type="xsd:string" />
          <xsd:element name="generateManyFiles" type="xsd:boolean" />
          <xsd:element name="locale" nillable="true" type="xsd:string" />
          <xsd:element name="lookAhead" type="xsd:int" />
          <xsd:element name="lpdURI" nillable="true" type="xsd:string" />
          <xsd:element name="metaDataSpecFile" nillable="true" type="xsd:string" />
          <xsd:element name="printerQueueName" nillable="true" type="xsd:string" />
          <xsd:element name="printerURI" nillable="true" type="xsd:string" />
          <xsd:element name="recordIdField" nillable="true" type="xsd:string" />
          <xsd:element name="recordLevel" type="xsd:int" />
          <xsd:element name="recordLevelMetaData" type="xsd:boolean" />
          <xsd:element name="recordName" nillable="true" type="xsd:string" />
          <xsd:element name="rules" nillable="true" type="impl:MyArrayOf_xsd_anyType" />
          <xsd:element name="serverPrintSpec" nillable="true" type="xsd:string" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="generatePDFOutputResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="generatePDFOutputPDFDoc" type="impl:BLOB" />
            <xsd:element name="generatePDFOutputMetaDataDoc" type="impl:BLOB" />
            <xsd:element name="generatePDFOutputResultDoc" type="impl:BLOB" />
            <xsd:element name="generatePDFOutputResult" type="impl:OutputResult" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:complexType name="OutputResult">
        <xsd:sequence>
          <xsd:element name="generatedDoc" nillable="true" type="impl:BLOB" />
          <xsd:element name="metaDataDoc" nillable="true" type="impl:BLOB" />
          <xsd:element name="recordLevelMetaDataList" nillable="true" type="impl:MyArrayOf_xsd_anyType" />
          <xsd:element name="statusDoc" nillable="true" type="impl:BLOB" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="generatePrintedOutput">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="printFormat" type="impl:PrintFormat" />
            <xsd:element name="form" type="xsd:string" />
            <xsd:element name="contentRoot" type="xsd:string" />
            <xsd:element minOccurs="0" maxOccurs="1" name="XDCURI" type="xsd:string" />
            <xsd:element minOccurs="0" maxOccurs="1" name="printedOutputOptionsSpec" type="impl:PrintedOutputOptionsSpec" />
            <xsd:element minOccurs="0" maxOccurs="1" name="inDataDoc" type="impl:BLOB" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:simpleType name="PrintFormat">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="PCL" />
          <xsd:enumeration value="PostScript" />
          <xsd:enumeration value="ZPL" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="OutputJog">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="usePrinterSetting" />
          <xsd:enumeration value="none" />
          <xsd:enumeration value="pageSet" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Pagination">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="simplex" />
          <xsd:enumeration value="duplexShortEdge" />
          <xsd:enumeration value="duplexLongEdge" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Staple">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="usePrinterSetting" />
          <xsd:enumeration value="on" />
          <xsd:enumeration value="off" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="PrintedOutputOptionsSpec">
        <xsd:sequence>
          <xsd:element name="XCIURI" nillable="true" type="xsd:string" />
          <xsd:element name="charset" nillable="true" type="xsd:string" />
          <xsd:element name="copies" type="xsd:int" />
          <xsd:element name="fileURI" nillable="true" type="xsd:string" />
          <xsd:element name="generateManyFiles" type="xsd:boolean" />
          <xsd:element name="locale" nillable="true" type="xsd:string" />
          <xsd:element name="lookAhead" type="xsd:int" />
          <xsd:element name="lpdURI" nillable="true" type="xsd:string" />
          <xsd:element name="metaDataSpecFile" nillable="true" type="xsd:string" />
          <xsd:element name="outputBin" nillable="true" type="xsd:string" />
          <xsd:element name="outputJog" nillable="true" type="impl:OutputJog" />
          <xsd:element name="pageOffsetX" nillable="true" type="xsd:string" />
          <xsd:element name="pageOffsetY" nillable="true" type="xsd:string" />
          <xsd:element name="pagination" nillable="true" type="impl:Pagination" />
          <xsd:element name="printerQueueName" nillable="true" type="xsd:string" />
          <xsd:element name="printerURI" nillable="true" type="xsd:string" />
          <xsd:element name="recordIdField" nillable="true" type="xsd:string" />
          <xsd:element name="recordLevel" type="xsd:int" />
          <xsd:element name="recordLevelMetaData" type="xsd:boolean" />
          <xsd:element name="recordName" nillable="true" type="xsd:string" />
          <xsd:element name="rules" nillable="true" type="impl:MyArrayOf_xsd_anyType" />
          <xsd:element name="serverPrintSpec" nillable="true" type="xsd:string" />
          <xsd:element name="staple" nillable="true" type="impl:Staple" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="generatePrintedOutputResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="generatePrintedOutputPrintedDoc" type="impl:BLOB" />
            <xsd:element name="generatePrintedOutputMetaDataDoc" type="impl:BLOB" />
            <xsd:element name="generatePrintedOutputResultDoc" type="impl:BLOB" />
            <xsd:element name="generatePrintedOutputResult" type="impl:OutputResult" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getResult">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" maxOccurs="1" name="requestId" type="xsd:string" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getResultResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="outXmlDoc" type="impl:BLOB" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="print">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="inDataDoc" type="impl:BLOB" />
            <xsd:element name="printUri" type="xsd:string" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="printResponse">
        <xsd:complexType />
      </xsd:element>
      <xsd:element name="LPRPrint">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="inDataDoc" type="impl:BLOB" />
            <xsd:element name="lpdURI" type="xsd:string" />
            <xsd:element minOccurs="0" maxOccurs="1" name="printerQueueName" type="xsd:string" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="LPRPrintResponse">
        <xsd:complexType />
      </xsd:element>
      <xsd:element name="transformPDF">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="inPdfDoc" type="impl:BLOB" />
            <xsd:element name="transformationFormat" type="impl:TransformationFormat" />
            <xsd:element minOccurs="0" maxOccurs="1" name="pdfaRevisionNumber" type="impl:PDFARevisionNumber" />
            <xsd:element minOccurs="0" maxOccurs="1" name="pdfaAmendment" type="xsd:string" />
            <xsd:element minOccurs="0" maxOccurs="1" name="pdfaConformance" type="impl:PDFAConformance" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="transformPDFResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="outPdfDoc" type="impl:BLOB" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:complexType name="Rule">
        <xsd:sequence>
          <xsd:element name="form" nillable="true" type="xsd:string" />
          <xsd:element name="pattern" nillable="true" type="xsd:string" />
        </xsd:sequence>
      </xsd:complexType>
    </xsd:schema>
    <xsd:schema xmlns="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="http://xml.apache.org/xml-soap">
      <xsd:import namespace="http://adobe.com/idp/services" />
      <xsd:complexType name="Vector">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="item" type="xsd:anyType" />
        </xsd:sequence>
      </xsd:complexType>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="OutputException" />
  <wsdl:message name="getResultResponse">
    <wsdl:part name="parameters" element="impl:getResultResponse" />
  </wsdl:message>
  <wsdl:message name="printResponse">
    <wsdl:part name="parameters" element="impl:printResponse" />
  </wsdl:message>
  <wsdl:message name="generateOutputResponse">
    <wsdl:part name="parameters" element="impl:generateOutputResponse" />
  </wsdl:message>
  <wsdl:message name="getResultRequest">
    <wsdl:part name="parameters" element="impl:getResult" />
  </wsdl:message>
  <wsdl:message name="LPRPrintRequest">
    <wsdl:part name="parameters" element="impl:LPRPrint" />
  </wsdl:message>
  <wsdl:message name="LPRPrintResponse">
    <wsdl:part name="parameters" element="impl:LPRPrintResponse" />
  </wsdl:message>
  <wsdl:message name="transformPDFResponse">
    <wsdl:part name="parameters" element="impl:transformPDFResponse" />
  </wsdl:message>
  <wsdl:message name="generatePDFOutputResponse">
    <wsdl:part name="parameters" element="impl:generatePDFOutputResponse" />
  </wsdl:message>
  <wsdl:message name="generatePrintedOutputResponse">
    <wsdl:part name="parameters" element="impl:generatePrintedOutputResponse" />
  </wsdl:message>
  <wsdl:message name="generatePDFOutputRequest">
    <wsdl:part name="parameters" element="impl:generatePDFOutput" />
  </wsdl:message>
  <wsdl:message name="generateOutputRequest">
    <wsdl:part name="parameters" element="impl:generateOutput" />
  </wsdl:message>
  <wsdl:message name="generatePrintedOutputRequest">
    <wsdl:part name="parameters" element="impl:generatePrintedOutput" />
  </wsdl:message>
  <wsdl:message name="transformPDFRequest">
    <wsdl:part name="parameters" element="impl:transformPDF" />
  </wsdl:message>
  <wsdl:message name="printRequest">
    <wsdl:part name="parameters" element="impl:print" />
  </wsdl:message>
  <wsdl:portType name="OutputService">
    <wsdl:operation name="generateOutput">
      <wsdl:input name="generateOutputRequest" message="impl:generateOutputRequest" />
      <wsdl:output name="generateOutputResponse" message="impl:generateOutputResponse" />
      <wsdl:fault name="OutputException" message="impl:OutputException" />
    </wsdl:operation>
    <wsdl:operation name="generatePDFOutput">
      <wsdl:input name="generatePDFOutputRequest" message="impl:generatePDFOutputRequest" />
      <wsdl:output name="generatePDFOutputResponse" message="impl:generatePDFOutputResponse" />
      <wsdl:fault name="OutputException" message="impl:OutputException" />
    </wsdl:operation>
    <wsdl:operation name="generatePrintedOutput">
      <wsdl:input name="generatePrintedOutputRequest" message="impl:generatePrintedOutputRequest" />
      <wsdl:output name="generatePrintedOutputResponse" message="impl:generatePrintedOutputResponse" />
      <wsdl:fault name="OutputException" message="impl:OutputException" />
    </wsdl:operation>
    <wsdl:operation name="getResult">
      <wsdl:input name="getResultRequest" message="impl:getResultRequest" />
      <wsdl:output name="getResultResponse" message="impl:getResultResponse" />
      <wsdl:fault name="OutputException" message="impl:OutputException" />
    </wsdl:operation>
    <wsdl:operation name="print">
      <wsdl:input name="printRequest" message="impl:printRequest" />
      <wsdl:output name="printResponse" message="impl:printResponse" />
      <wsdl:fault name="OutputException" message="impl:OutputException" />
    </wsdl:operation>
    <wsdl:operation name="LPRPrint">
      <wsdl:input name="LPRPrintRequest" message="impl:LPRPrintRequest" />
      <wsdl:output name="LPRPrintResponse" message="impl:LPRPrintResponse" />
      <wsdl:fault name="OutputException" message="impl:OutputException" />
    </wsdl:operation>
    <wsdl:operation name="transformPDF">
      <wsdl:input name="transformPDFRequest" message="impl:transformPDFRequest" />
      <wsdl:output name="transformPDFResponse" message="impl:transformPDFResponse" />
      <wsdl:fault name="OutputException" message="impl:OutputException" />
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="OutputServiceSoapBinding" type="impl:OutputService">
    <wsdlsoap:binding transport="http://schemas.xmlsoap.org/soap/http" />
    <wsdl:operation name="generateOutput">
      <wsdlsoap:operation soapAction="generateOutput" />
      <wsdl:input name="generateOutputRequest">
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="generateOutputResponse">
        <wsdlsoap:body use="literal" />
      </wsdl:output>
      <wsdl:fault name="OutputException">
        <wsdlsoap:fault use="literal" name="OutputException" namespace="" />
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="generatePDFOutput">
      <wsdlsoap:operation soapAction="generatePDFOutput" />
      <wsdl:input name="generatePDFOutputRequest">
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="generatePDFOutputResponse">
        <wsdlsoap:body use="literal" />
      </wsdl:output>
      <wsdl:fault name="OutputException">
        <wsdlsoap:fault use="literal" name="OutputException" namespace="" />
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="generatePrintedOutput">
      <wsdlsoap:operation soapAction="generatePrintedOutput" />
      <wsdl:input name="generatePrintedOutputRequest">
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="generatePrintedOutputResponse">
        <wsdlsoap:body use="literal" />
      </wsdl:output>
      <wsdl:fault name="OutputException">
        <wsdlsoap:fault use="literal" name="OutputException" namespace="" />
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getResult">
      <wsdlsoap:operation soapAction="getResult" />
      <wsdl:input name="getResultRequest">
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="getResultResponse">
        <wsdlsoap:body use="literal" />
      </wsdl:output>
      <wsdl:fault name="OutputException">
        <wsdlsoap:fault use="literal" name="OutputException" namespace="" />
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="print">
      <wsdlsoap:operation soapAction="print" />
      <wsdl:input name="printRequest">
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="printResponse">
        <wsdlsoap:body use="literal" />
      </wsdl:output>
      <wsdl:fault name="OutputException">
        <wsdlsoap:fault use="literal" name="OutputException" namespace="" />
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="LPRPrint">
      <wsdlsoap:operation soapAction="LPRPrint" />
      <wsdl:input name="LPRPrintRequest">
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="LPRPrintResponse">
        <wsdlsoap:body use="literal" />
      </wsdl:output>
      <wsdl:fault name="OutputException">
        <wsdlsoap:fault use="literal" name="OutputException" namespace="" />
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="transformPDF">
      <wsdlsoap:operation soapAction="transformPDF" />
      <wsdl:input name="transformPDFRequest">
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="transformPDFResponse">
        <wsdlsoap:body use="literal" />
      </wsdl:output>
      <wsdl:fault name="OutputException">
        <wsdlsoap:fault use="literal" name="OutputException" namespace="" />
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="OutputServiceService">
    <wsdl:port name="OutputService" binding="impl:OutputServiceSoapBinding">
      <wsdlsoap:address location="http://10.1.1.150:8085/soap/services/OutputService" />
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>