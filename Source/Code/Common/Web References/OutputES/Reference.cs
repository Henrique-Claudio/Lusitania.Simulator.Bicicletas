//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Lusitania.Simuladores.Common.OutputES {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="OutputServiceSoapBinding", Namespace="http://adobe.com/idp/services")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Rule))]
    public partial class OutputServiceService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback generateOutputOperationCompleted;
        
        private System.Threading.SendOrPostCallback generatePDFOutputOperationCompleted;
        
        private System.Threading.SendOrPostCallback generatePrintedOutputOperationCompleted;
        
        private System.Threading.SendOrPostCallback getResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback printOperationCompleted;
        
        private System.Threading.SendOrPostCallback LPRPrintOperationCompleted;
        
        private System.Threading.SendOrPostCallback transformPDFOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public OutputServiceService() {
            this.Url = global::Lusitania.Simuladores.Common.Properties.Settings.Default.Lusitania_Simuladores_Common_OutputES_OutputServiceService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event generateOutputCompletedEventHandler generateOutputCompleted;
        
        /// <remarks/>
        public event generatePDFOutputCompletedEventHandler generatePDFOutputCompleted;
        
        /// <remarks/>
        public event generatePrintedOutputCompletedEventHandler generatePrintedOutputCompleted;
        
        /// <remarks/>
        public event getResultCompletedEventHandler getResultCompleted;
        
        /// <remarks/>
        public event printCompletedEventHandler printCompleted;
        
        /// <remarks/>
        public event LPRPrintCompletedEventHandler LPRPrintCompleted;
        
        /// <remarks/>
        public event transformPDFCompletedEventHandler transformPDFCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("generateOutput", RequestNamespace="http://adobe.com/idp/services", ResponseNamespace="http://adobe.com/idp/services", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("outResultDoc")]
        public BLOB generateOutput(OutputOptionsSpec outputOptionsSpec, RenderOptionsSpec renderOptionsSpec, BLOB inDataDoc) {
            object[] results = this.Invoke("generateOutput", new object[] {
                        outputOptionsSpec,
                        renderOptionsSpec,
                        inDataDoc});
            return ((BLOB)(results[0]));
        }
        
        /// <remarks/>
        public void generateOutputAsync(OutputOptionsSpec outputOptionsSpec, RenderOptionsSpec renderOptionsSpec, BLOB inDataDoc) {
            this.generateOutputAsync(outputOptionsSpec, renderOptionsSpec, inDataDoc, null);
        }
        
        /// <remarks/>
        public void generateOutputAsync(OutputOptionsSpec outputOptionsSpec, RenderOptionsSpec renderOptionsSpec, BLOB inDataDoc, object userState) {
            if ((this.generateOutputOperationCompleted == null)) {
                this.generateOutputOperationCompleted = new System.Threading.SendOrPostCallback(this.OngenerateOutputOperationCompleted);
            }
            this.InvokeAsync("generateOutput", new object[] {
                        outputOptionsSpec,
                        renderOptionsSpec,
                        inDataDoc}, this.generateOutputOperationCompleted, userState);
        }
        
        private void OngenerateOutputOperationCompleted(object arg) {
            if ((this.generateOutputCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.generateOutputCompleted(this, new generateOutputCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("generatePDFOutput", RequestNamespace="http://adobe.com/idp/services", ResponseNamespace="http://adobe.com/idp/services", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("generatePDFOutputPDFDoc")]
        public BLOB generatePDFOutput(TransformationFormat transformationFormat, string form, string contentRoot, PDFOutputOptionsSpec pdfOutputOptionsSpec, RenderOptionsSpec renderOptionsSpec, BLOB inDataDoc, out BLOB generatePDFOutputMetaDataDoc, out BLOB generatePDFOutputResultDoc, out OutputResult generatePDFOutputResult) {
            object[] results = this.Invoke("generatePDFOutput", new object[] {
                        transformationFormat,
                        form,
                        contentRoot,
                        pdfOutputOptionsSpec,
                        renderOptionsSpec,
                        inDataDoc});
            generatePDFOutputMetaDataDoc = ((BLOB)(results[1]));
            generatePDFOutputResultDoc = ((BLOB)(results[2]));
            generatePDFOutputResult = ((OutputResult)(results[3]));
            return ((BLOB)(results[0]));
        }
        
        /// <remarks/>
        public void generatePDFOutputAsync(TransformationFormat transformationFormat, string form, string contentRoot, PDFOutputOptionsSpec pdfOutputOptionsSpec, RenderOptionsSpec renderOptionsSpec, BLOB inDataDoc) {
            this.generatePDFOutputAsync(transformationFormat, form, contentRoot, pdfOutputOptionsSpec, renderOptionsSpec, inDataDoc, null);
        }
        
        /// <remarks/>
        public void generatePDFOutputAsync(TransformationFormat transformationFormat, string form, string contentRoot, PDFOutputOptionsSpec pdfOutputOptionsSpec, RenderOptionsSpec renderOptionsSpec, BLOB inDataDoc, object userState) {
            if ((this.generatePDFOutputOperationCompleted == null)) {
                this.generatePDFOutputOperationCompleted = new System.Threading.SendOrPostCallback(this.OngeneratePDFOutputOperationCompleted);
            }
            this.InvokeAsync("generatePDFOutput", new object[] {
                        transformationFormat,
                        form,
                        contentRoot,
                        pdfOutputOptionsSpec,
                        renderOptionsSpec,
                        inDataDoc}, this.generatePDFOutputOperationCompleted, userState);
        }
        
        private void OngeneratePDFOutputOperationCompleted(object arg) {
            if ((this.generatePDFOutputCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.generatePDFOutputCompleted(this, new generatePDFOutputCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("generatePrintedOutput", RequestNamespace="http://adobe.com/idp/services", ResponseNamespace="http://adobe.com/idp/services", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("generatePrintedOutputPrintedDoc")]
        public BLOB generatePrintedOutput(PrintFormat printFormat, string form, string contentRoot, string XDCURI, PrintedOutputOptionsSpec printedOutputOptionsSpec, BLOB inDataDoc, out BLOB generatePrintedOutputMetaDataDoc, out BLOB generatePrintedOutputResultDoc, out OutputResult generatePrintedOutputResult) {
            object[] results = this.Invoke("generatePrintedOutput", new object[] {
                        printFormat,
                        form,
                        contentRoot,
                        XDCURI,
                        printedOutputOptionsSpec,
                        inDataDoc});
            generatePrintedOutputMetaDataDoc = ((BLOB)(results[1]));
            generatePrintedOutputResultDoc = ((BLOB)(results[2]));
            generatePrintedOutputResult = ((OutputResult)(results[3]));
            return ((BLOB)(results[0]));
        }
        
        /// <remarks/>
        public void generatePrintedOutputAsync(PrintFormat printFormat, string form, string contentRoot, string XDCURI, PrintedOutputOptionsSpec printedOutputOptionsSpec, BLOB inDataDoc) {
            this.generatePrintedOutputAsync(printFormat, form, contentRoot, XDCURI, printedOutputOptionsSpec, inDataDoc, null);
        }
        
        /// <remarks/>
        public void generatePrintedOutputAsync(PrintFormat printFormat, string form, string contentRoot, string XDCURI, PrintedOutputOptionsSpec printedOutputOptionsSpec, BLOB inDataDoc, object userState) {
            if ((this.generatePrintedOutputOperationCompleted == null)) {
                this.generatePrintedOutputOperationCompleted = new System.Threading.SendOrPostCallback(this.OngeneratePrintedOutputOperationCompleted);
            }
            this.InvokeAsync("generatePrintedOutput", new object[] {
                        printFormat,
                        form,
                        contentRoot,
                        XDCURI,
                        printedOutputOptionsSpec,
                        inDataDoc}, this.generatePrintedOutputOperationCompleted, userState);
        }
        
        private void OngeneratePrintedOutputOperationCompleted(object arg) {
            if ((this.generatePrintedOutputCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.generatePrintedOutputCompleted(this, new generatePrintedOutputCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("getResult", RequestNamespace="http://adobe.com/idp/services", ResponseNamespace="http://adobe.com/idp/services", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("outXmlDoc")]
        public BLOB getResult(string requestId) {
            object[] results = this.Invoke("getResult", new object[] {
                        requestId});
            return ((BLOB)(results[0]));
        }
        
        /// <remarks/>
        public void getResultAsync(string requestId) {
            this.getResultAsync(requestId, null);
        }
        
        /// <remarks/>
        public void getResultAsync(string requestId, object userState) {
            if ((this.getResultOperationCompleted == null)) {
                this.getResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetResultOperationCompleted);
            }
            this.InvokeAsync("getResult", new object[] {
                        requestId}, this.getResultOperationCompleted, userState);
        }
        
        private void OngetResultOperationCompleted(object arg) {
            if ((this.getResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getResultCompleted(this, new getResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("print", RequestNamespace="http://adobe.com/idp/services", ResponseNamespace="http://adobe.com/idp/services", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void print(BLOB inDataDoc, string printUri) {
            this.Invoke("print", new object[] {
                        inDataDoc,
                        printUri});
        }
        
        /// <remarks/>
        public void printAsync(BLOB inDataDoc, string printUri) {
            this.printAsync(inDataDoc, printUri, null);
        }
        
        /// <remarks/>
        public void printAsync(BLOB inDataDoc, string printUri, object userState) {
            if ((this.printOperationCompleted == null)) {
                this.printOperationCompleted = new System.Threading.SendOrPostCallback(this.OnprintOperationCompleted);
            }
            this.InvokeAsync("print", new object[] {
                        inDataDoc,
                        printUri}, this.printOperationCompleted, userState);
        }
        
        private void OnprintOperationCompleted(object arg) {
            if ((this.printCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.printCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("LPRPrint", RequestNamespace="http://adobe.com/idp/services", ResponseNamespace="http://adobe.com/idp/services", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void LPRPrint(BLOB inDataDoc, string lpdURI, string printerQueueName) {
            this.Invoke("LPRPrint", new object[] {
                        inDataDoc,
                        lpdURI,
                        printerQueueName});
        }
        
        /// <remarks/>
        public void LPRPrintAsync(BLOB inDataDoc, string lpdURI, string printerQueueName) {
            this.LPRPrintAsync(inDataDoc, lpdURI, printerQueueName, null);
        }
        
        /// <remarks/>
        public void LPRPrintAsync(BLOB inDataDoc, string lpdURI, string printerQueueName, object userState) {
            if ((this.LPRPrintOperationCompleted == null)) {
                this.LPRPrintOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLPRPrintOperationCompleted);
            }
            this.InvokeAsync("LPRPrint", new object[] {
                        inDataDoc,
                        lpdURI,
                        printerQueueName}, this.LPRPrintOperationCompleted, userState);
        }
        
        private void OnLPRPrintOperationCompleted(object arg) {
            if ((this.LPRPrintCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LPRPrintCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("transformPDF", RequestNamespace="http://adobe.com/idp/services", ResponseNamespace="http://adobe.com/idp/services", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("outPdfDoc")]
        public BLOB transformPDF(BLOB inPdfDoc, TransformationFormat transformationFormat, PDFARevisionNumber pdfaRevisionNumber, [System.Xml.Serialization.XmlIgnoreAttribute()] bool pdfaRevisionNumberSpecified, string pdfaAmendment, PDFAConformance pdfaConformance, [System.Xml.Serialization.XmlIgnoreAttribute()] bool pdfaConformanceSpecified) {
            object[] results = this.Invoke("transformPDF", new object[] {
                        inPdfDoc,
                        transformationFormat,
                        pdfaRevisionNumber,
                        pdfaRevisionNumberSpecified,
                        pdfaAmendment,
                        pdfaConformance,
                        pdfaConformanceSpecified});
            return ((BLOB)(results[0]));
        }
        
        /// <remarks/>
        public void transformPDFAsync(BLOB inPdfDoc, TransformationFormat transformationFormat, PDFARevisionNumber pdfaRevisionNumber, bool pdfaRevisionNumberSpecified, string pdfaAmendment, PDFAConformance pdfaConformance, bool pdfaConformanceSpecified) {
            this.transformPDFAsync(inPdfDoc, transformationFormat, pdfaRevisionNumber, pdfaRevisionNumberSpecified, pdfaAmendment, pdfaConformance, pdfaConformanceSpecified, null);
        }
        
        /// <remarks/>
        public void transformPDFAsync(BLOB inPdfDoc, TransformationFormat transformationFormat, PDFARevisionNumber pdfaRevisionNumber, bool pdfaRevisionNumberSpecified, string pdfaAmendment, PDFAConformance pdfaConformance, bool pdfaConformanceSpecified, object userState) {
            if ((this.transformPDFOperationCompleted == null)) {
                this.transformPDFOperationCompleted = new System.Threading.SendOrPostCallback(this.OntransformPDFOperationCompleted);
            }
            this.InvokeAsync("transformPDF", new object[] {
                        inPdfDoc,
                        transformationFormat,
                        pdfaRevisionNumber,
                        pdfaRevisionNumberSpecified,
                        pdfaAmendment,
                        pdfaConformance,
                        pdfaConformanceSpecified}, this.transformPDFOperationCompleted, userState);
        }
        
        private void OntransformPDFOperationCompleted(object arg) {
            if ((this.transformPDFCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.transformPDFCompleted(this, new transformPDFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://adobe.com/idp/services")]
    public partial class OutputOptionsSpec {
        
        private bool pCLFormatField;
        
        private bool zPLFormatField;
        
        private bool batchField;
        
        private string charsetField;
        
        private string contentRootField;
        
        private int copiesField;
        
        private string dataFileField;
        
        private string emailBodyField;
        
        private string emailRecipientsField;
        
        private string emailServerField;
        
        private string emailSubjectField;
        
        private string fileUriField;
        
        private string formField;
        
        private string localeField;
        
        private int lookAheadField;
        
        private string lpdURIField;
        
        private string metaDataSpecFileField;
        
        private bool multipleOutputField;
        
        private string optionStringField;
        
        private string optionsField;
        
        private string outputBinField;
        
        private string outputJogField;
        
        private string outputStreamField;
        
        private string pageOffsetXField;
        
        private string pageOffsetYField;
        
        private string paginationField;
        
        private bool postScriptFormatField;
        
        private string printFormatField;
        
        private string printUriField;
        
        private string printerQueueNameField;
        
        private string recordIdFieldField;
        
        private int recordLevelField;
        
        private bool recordLevelMetaDataField;
        
        private string recordNameField;
        
        private string requestorField;
        
        private object[] rulesField;
        
        private string serverPrintSpecField;
        
        private bool singleOutputField;
        
        private string stapleField;
        
        private bool waitForResponseField;
        
        private string xciField;
        
        /// <remarks/>
        public bool PCLFormat {
            get {
                return this.pCLFormatField;
            }
            set {
                this.pCLFormatField = value;
            }
        }
        
        /// <remarks/>
        public bool ZPLFormat {
            get {
                return this.zPLFormatField;
            }
            set {
                this.zPLFormatField = value;
            }
        }
        
        /// <remarks/>
        public bool batch {
            get {
                return this.batchField;
            }
            set {
                this.batchField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string charset {
            get {
                return this.charsetField;
            }
            set {
                this.charsetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string contentRoot {
            get {
                return this.contentRootField;
            }
            set {
                this.contentRootField = value;
            }
        }
        
        /// <remarks/>
        public int copies {
            get {
                return this.copiesField;
            }
            set {
                this.copiesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string dataFile {
            get {
                return this.dataFileField;
            }
            set {
                this.dataFileField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string emailBody {
            get {
                return this.emailBodyField;
            }
            set {
                this.emailBodyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string emailRecipients {
            get {
                return this.emailRecipientsField;
            }
            set {
                this.emailRecipientsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string emailServer {
            get {
                return this.emailServerField;
            }
            set {
                this.emailServerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string emailSubject {
            get {
                return this.emailSubjectField;
            }
            set {
                this.emailSubjectField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string fileUri {
            get {
                return this.fileUriField;
            }
            set {
                this.fileUriField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string form {
            get {
                return this.formField;
            }
            set {
                this.formField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string locale {
            get {
                return this.localeField;
            }
            set {
                this.localeField = value;
            }
        }
        
        /// <remarks/>
        public int lookAhead {
            get {
                return this.lookAheadField;
            }
            set {
                this.lookAheadField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string lpdURI {
            get {
                return this.lpdURIField;
            }
            set {
                this.lpdURIField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string metaDataSpecFile {
            get {
                return this.metaDataSpecFileField;
            }
            set {
                this.metaDataSpecFileField = value;
            }
        }
        
        /// <remarks/>
        public bool multipleOutput {
            get {
                return this.multipleOutputField;
            }
            set {
                this.multipleOutputField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string optionString {
            get {
                return this.optionStringField;
            }
            set {
                this.optionStringField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string options {
            get {
                return this.optionsField;
            }
            set {
                this.optionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string outputBin {
            get {
                return this.outputBinField;
            }
            set {
                this.outputBinField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string outputJog {
            get {
                return this.outputJogField;
            }
            set {
                this.outputJogField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string outputStream {
            get {
                return this.outputStreamField;
            }
            set {
                this.outputStreamField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string pageOffsetX {
            get {
                return this.pageOffsetXField;
            }
            set {
                this.pageOffsetXField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string pageOffsetY {
            get {
                return this.pageOffsetYField;
            }
            set {
                this.pageOffsetYField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string pagination {
            get {
                return this.paginationField;
            }
            set {
                this.paginationField = value;
            }
        }
        
        /// <remarks/>
        public bool postScriptFormat {
            get {
                return this.postScriptFormatField;
            }
            set {
                this.postScriptFormatField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string printFormat {
            get {
                return this.printFormatField;
            }
            set {
                this.printFormatField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string printUri {
            get {
                return this.printUriField;
            }
            set {
                this.printUriField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string printerQueueName {
            get {
                return this.printerQueueNameField;
            }
            set {
                this.printerQueueNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string recordIdField {
            get {
                return this.recordIdFieldField;
            }
            set {
                this.recordIdFieldField = value;
            }
        }
        
        /// <remarks/>
        public int recordLevel {
            get {
                return this.recordLevelField;
            }
            set {
                this.recordLevelField = value;
            }
        }
        
        /// <remarks/>
        public bool recordLevelMetaData {
            get {
                return this.recordLevelMetaDataField;
            }
            set {
                this.recordLevelMetaDataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string recordName {
            get {
                return this.recordNameField;
            }
            set {
                this.recordNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string requestor {
            get {
                return this.requestorField;
            }
            set {
                this.requestorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", IsNullable=false)]
        public object[] rules {
            get {
                return this.rulesField;
            }
            set {
                this.rulesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string serverPrintSpec {
            get {
                return this.serverPrintSpecField;
            }
            set {
                this.serverPrintSpecField = value;
            }
        }
        
        /// <remarks/>
        public bool singleOutput {
            get {
                return this.singleOutputField;
            }
            set {
                this.singleOutputField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string staple {
            get {
                return this.stapleField;
            }
            set {
                this.stapleField = value;
            }
        }
        
        /// <remarks/>
        public bool waitForResponse {
            get {
                return this.waitForResponseField;
            }
            set {
                this.waitForResponseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string xci {
            get {
                return this.xciField;
            }
            set {
                this.xciField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://adobe.com/idp/services")]
    public partial class Rule {
        
        private string formField;
        
        private string patternField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string form {
            get {
                return this.formField;
            }
            set {
                this.formField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string pattern {
            get {
                return this.patternField;
            }
            set {
                this.patternField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://adobe.com/idp/services")]
    public partial class PrintedOutputOptionsSpec {
        
        private string xCIURIField;
        
        private string charsetField;
        
        private int copiesField;
        
        private string fileURIField;
        
        private bool generateManyFilesField;
        
        private string localeField;
        
        private int lookAheadField;
        
        private string lpdURIField;
        
        private string metaDataSpecFileField;
        
        private string outputBinField;
        
        private System.Nullable<OutputJog> outputJogField;
        
        private string pageOffsetXField;
        
        private string pageOffsetYField;
        
        private System.Nullable<Pagination> paginationField;
        
        private string printerQueueNameField;
        
        private string printerURIField;
        
        private string recordIdFieldField;
        
        private int recordLevelField;
        
        private bool recordLevelMetaDataField;
        
        private string recordNameField;
        
        private object[] rulesField;
        
        private string serverPrintSpecField;
        
        private System.Nullable<Staple> stapleField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string XCIURI {
            get {
                return this.xCIURIField;
            }
            set {
                this.xCIURIField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string charset {
            get {
                return this.charsetField;
            }
            set {
                this.charsetField = value;
            }
        }
        
        /// <remarks/>
        public int copies {
            get {
                return this.copiesField;
            }
            set {
                this.copiesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string fileURI {
            get {
                return this.fileURIField;
            }
            set {
                this.fileURIField = value;
            }
        }
        
        /// <remarks/>
        public bool generateManyFiles {
            get {
                return this.generateManyFilesField;
            }
            set {
                this.generateManyFilesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string locale {
            get {
                return this.localeField;
            }
            set {
                this.localeField = value;
            }
        }
        
        /// <remarks/>
        public int lookAhead {
            get {
                return this.lookAheadField;
            }
            set {
                this.lookAheadField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string lpdURI {
            get {
                return this.lpdURIField;
            }
            set {
                this.lpdURIField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string metaDataSpecFile {
            get {
                return this.metaDataSpecFileField;
            }
            set {
                this.metaDataSpecFileField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string outputBin {
            get {
                return this.outputBinField;
            }
            set {
                this.outputBinField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<OutputJog> outputJog {
            get {
                return this.outputJogField;
            }
            set {
                this.outputJogField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string pageOffsetX {
            get {
                return this.pageOffsetXField;
            }
            set {
                this.pageOffsetXField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string pageOffsetY {
            get {
                return this.pageOffsetYField;
            }
            set {
                this.pageOffsetYField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<Pagination> pagination {
            get {
                return this.paginationField;
            }
            set {
                this.paginationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string printerQueueName {
            get {
                return this.printerQueueNameField;
            }
            set {
                this.printerQueueNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string printerURI {
            get {
                return this.printerURIField;
            }
            set {
                this.printerURIField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string recordIdField {
            get {
                return this.recordIdFieldField;
            }
            set {
                this.recordIdFieldField = value;
            }
        }
        
        /// <remarks/>
        public int recordLevel {
            get {
                return this.recordLevelField;
            }
            set {
                this.recordLevelField = value;
            }
        }
        
        /// <remarks/>
        public bool recordLevelMetaData {
            get {
                return this.recordLevelMetaDataField;
            }
            set {
                this.recordLevelMetaDataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string recordName {
            get {
                return this.recordNameField;
            }
            set {
                this.recordNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", IsNullable=false)]
        public object[] rules {
            get {
                return this.rulesField;
            }
            set {
                this.rulesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string serverPrintSpec {
            get {
                return this.serverPrintSpecField;
            }
            set {
                this.serverPrintSpecField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<Staple> staple {
            get {
                return this.stapleField;
            }
            set {
                this.stapleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://adobe.com/idp/services")]
    public enum OutputJog {
        
        /// <remarks/>
        usePrinterSetting,
        
        /// <remarks/>
        none,
        
        /// <remarks/>
        pageSet,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://adobe.com/idp/services")]
    public enum Pagination {
        
        /// <remarks/>
        simplex,
        
        /// <remarks/>
        duplexShortEdge,
        
        /// <remarks/>
        duplexLongEdge,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://adobe.com/idp/services")]
    public enum Staple {
        
        /// <remarks/>
        usePrinterSetting,
        
        /// <remarks/>
        on,
        
        /// <remarks/>
        off,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://adobe.com/idp/services")]
    public partial class OutputResult {
        
        private BLOB generatedDocField;
        
        private BLOB metaDataDocField;
        
        private object[] recordLevelMetaDataListField;
        
        private BLOB statusDocField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public BLOB generatedDoc {
            get {
                return this.generatedDocField;
            }
            set {
                this.generatedDocField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public BLOB metaDataDoc {
            get {
                return this.metaDataDocField;
            }
            set {
                this.metaDataDocField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", IsNullable=false)]
        public object[] recordLevelMetaDataList {
            get {
                return this.recordLevelMetaDataListField;
            }
            set {
                this.recordLevelMetaDataListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public BLOB statusDoc {
            get {
                return this.statusDocField;
            }
            set {
                this.statusDocField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://adobe.com/idp/services")]
    public partial class BLOB {
        
        private string contentTypeField;
        
        private byte[] binaryDataField;
        
        private string attachmentIDField;
        
        private string remoteURLField;
        
        /// <remarks/>
        public string contentType {
            get {
                return this.contentTypeField;
            }
            set {
                this.contentTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] binaryData {
            get {
                return this.binaryDataField;
            }
            set {
                this.binaryDataField = value;
            }
        }
        
        /// <remarks/>
        public string attachmentID {
            get {
                return this.attachmentIDField;
            }
            set {
                this.attachmentIDField = value;
            }
        }
        
        /// <remarks/>
        public string remoteURL {
            get {
                return this.remoteURLField;
            }
            set {
                this.remoteURLField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://adobe.com/idp/services")]
    public partial class PDFOutputOptionsSpec {
        
        private string xCIURIField;
        
        private string charsetField;
        
        private string fileURIField;
        
        private bool generateManyFilesField;
        
        private string localeField;
        
        private int lookAheadField;
        
        private string lpdURIField;
        
        private string metaDataSpecFileField;
        
        private string printerQueueNameField;
        
        private string printerURIField;
        
        private string recordIdFieldField;
        
        private int recordLevelField;
        
        private bool recordLevelMetaDataField;
        
        private string recordNameField;
        
        private object[] rulesField;
        
        private string serverPrintSpecField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string XCIURI {
            get {
                return this.xCIURIField;
            }
            set {
                this.xCIURIField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string charset {
            get {
                return this.charsetField;
            }
            set {
                this.charsetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string fileURI {
            get {
                return this.fileURIField;
            }
            set {
                this.fileURIField = value;
            }
        }
        
        /// <remarks/>
        public bool generateManyFiles {
            get {
                return this.generateManyFilesField;
            }
            set {
                this.generateManyFilesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string locale {
            get {
                return this.localeField;
            }
            set {
                this.localeField = value;
            }
        }
        
        /// <remarks/>
        public int lookAhead {
            get {
                return this.lookAheadField;
            }
            set {
                this.lookAheadField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string lpdURI {
            get {
                return this.lpdURIField;
            }
            set {
                this.lpdURIField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string metaDataSpecFile {
            get {
                return this.metaDataSpecFileField;
            }
            set {
                this.metaDataSpecFileField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string printerQueueName {
            get {
                return this.printerQueueNameField;
            }
            set {
                this.printerQueueNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string printerURI {
            get {
                return this.printerURIField;
            }
            set {
                this.printerURIField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string recordIdField {
            get {
                return this.recordIdFieldField;
            }
            set {
                this.recordIdFieldField = value;
            }
        }
        
        /// <remarks/>
        public int recordLevel {
            get {
                return this.recordLevelField;
            }
            set {
                this.recordLevelField = value;
            }
        }
        
        /// <remarks/>
        public bool recordLevelMetaData {
            get {
                return this.recordLevelMetaDataField;
            }
            set {
                this.recordLevelMetaDataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string recordName {
            get {
                return this.recordNameField;
            }
            set {
                this.recordNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", IsNullable=false)]
        public object[] rules {
            get {
                return this.rulesField;
            }
            set {
                this.rulesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string serverPrintSpec {
            get {
                return this.serverPrintSpecField;
            }
            set {
                this.serverPrintSpecField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://adobe.com/idp/services")]
    public partial class RenderOptionsSpec {
        
        private string pDFAAmendmentField;
        
        private System.Nullable<PDFAConformance> pDFAConformanceField;
        
        private System.Nullable<PDFARevisionNumber> pDFARevisionNumberField;
        
        private System.Nullable<bool> cacheEnabledField;
        
        private bool debugEnabledField;
        
        private bool linearizedPDFField;
        
        private string optionsField;
        
        private string pdfVersionField;
        
        private string renderAtClientField;
        
        private bool taggedPDFField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PDFAAmendment {
            get {
                return this.pDFAAmendmentField;
            }
            set {
                this.pDFAAmendmentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<PDFAConformance> PDFAConformance {
            get {
                return this.pDFAConformanceField;
            }
            set {
                this.pDFAConformanceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<PDFARevisionNumber> PDFARevisionNumber {
            get {
                return this.pDFARevisionNumberField;
            }
            set {
                this.pDFARevisionNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> cacheEnabled {
            get {
                return this.cacheEnabledField;
            }
            set {
                this.cacheEnabledField = value;
            }
        }
        
        /// <remarks/>
        public bool debugEnabled {
            get {
                return this.debugEnabledField;
            }
            set {
                this.debugEnabledField = value;
            }
        }
        
        /// <remarks/>
        public bool linearizedPDF {
            get {
                return this.linearizedPDFField;
            }
            set {
                this.linearizedPDFField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string options {
            get {
                return this.optionsField;
            }
            set {
                this.optionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string pdfVersion {
            get {
                return this.pdfVersionField;
            }
            set {
                this.pdfVersionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string renderAtClient {
            get {
                return this.renderAtClientField;
            }
            set {
                this.renderAtClientField = value;
            }
        }
        
        /// <remarks/>
        public bool taggedPDF {
            get {
                return this.taggedPDFField;
            }
            set {
                this.taggedPDFField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://adobe.com/idp/services")]
    public enum PDFAConformance {
        
        /// <remarks/>
        A,
        
        /// <remarks/>
        B,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://adobe.com/idp/services")]
    public enum PDFARevisionNumber {
        
        /// <remarks/>
        Revision_1,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://adobe.com/idp/services")]
    public enum TransformationFormat {
        
        /// <remarks/>
        PDF,
        
        /// <remarks/>
        PDFA,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://adobe.com/idp/services")]
    public enum PrintFormat {
        
        /// <remarks/>
        PCL,
        
        /// <remarks/>
        PostScript,
        
        /// <remarks/>
        ZPL,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void generateOutputCompletedEventHandler(object sender, generateOutputCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class generateOutputCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal generateOutputCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BLOB Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BLOB)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void generatePDFOutputCompletedEventHandler(object sender, generatePDFOutputCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class generatePDFOutputCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal generatePDFOutputCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BLOB Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BLOB)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public BLOB generatePDFOutputMetaDataDoc {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BLOB)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public BLOB generatePDFOutputResultDoc {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BLOB)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public OutputResult generatePDFOutputResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OutputResult)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void generatePrintedOutputCompletedEventHandler(object sender, generatePrintedOutputCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class generatePrintedOutputCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal generatePrintedOutputCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BLOB Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BLOB)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public BLOB generatePrintedOutputMetaDataDoc {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BLOB)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public BLOB generatePrintedOutputResultDoc {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BLOB)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public OutputResult generatePrintedOutputResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OutputResult)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getResultCompletedEventHandler(object sender, getResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BLOB Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BLOB)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void printCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void LPRPrintCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void transformPDFCompletedEventHandler(object sender, transformPDFCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class transformPDFCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal transformPDFCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BLOB Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BLOB)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591